Resources:
  HttpApiUnsecure:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: __StageName__

  HttpApiSecure:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: __StageName__
      Auth:
        Authorizers:
          OpenIdAuthorizer:
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              issuer:
                Fn::Sub: https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}
              audience: # careful here, this must be a scalar node or the deploy fails silently with no routes!
              - Ref: UserPoolClient
        DefaultAuthorizer: OpenIdAuthorizer
  
  ApiUnsecure:
    Type: AWS::Serverless::Api
    Properties:
      Name: 
        Fn::Sub: ${AWS::StackName}-ApiUnsecure
      StageName: __StageName__
      EndpointConfiguration: REGIONAL
      TracingEnabled: true

  ApiSecure:
    Type: AWS::Serverless::Api
    Properties:
      Name: 
        Fn::Sub: ${AWS::StackName}-ApiSecure
      StageName: __StageName__
      Auth:
        DefaultAuthorizer: AWS_IAM
      EndpointConfiguration: REGIONAL
      TracingEnabled: true 

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
      - email
      - preferred_username
      UserPoolName: 
        Fn::Sub: ${AWS::StackName}-UserPool
      AutoVerifiedAttributes:
      - email

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: 
        Ref: UserPool
      AllowedOAuthFlowsUserPoolClient: true
      SupportedIdentityProviders:
      - COGNITO
      GenerateSecret: false
      AllowedOAuthFlows:
      - code
      RefreshTokenValidity: 30
      CallbackURLs:
      - https://www.example.com
      LogoutURLs:
      - https://www.example.com
      AllowedOAuthScopes:
      - phone
      - email
      - openid
      - aws.cognito.signin.user.admin
      - profile

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: 
        Fn::Sub: ${AWS::StackName}-IdentityPool
      AllowUnauthenticatedIdentities: false
      AllowClassicFlow: false
      CognitoIdentityProviders:
      - ClientId: 
          Ref: UserPoolClient
        ProviderName: 
          Fn::GetAtt: UserPool.ProviderName

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: 
        Ref: IdentityPool
      Roles:
        authenticated: 
          Fn::GetAtt: AuthRole.Arn

  AuthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
        Fn::Sub: ${AWS::StackName}-AuthRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Federated: 'cognito-identity.amazonaws.com'
          Action:
          - 'sts:AssumeRoleWithWebIdentity'
          Condition:
            StringEquals:
              'cognito-identity.amazonaws.com:aud': 
                Ref: IdentityPool
            'ForAnyValue:StringLike':
              'cognito-identity.amazonaws.com:amr': authenticated

      Policies:
      - PolicyName: 
          Fn::Sub: ${AWS::StackName}-AuthPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Action:
            - 'mobileanalytics:PutEvents'
            - 'cognito-sync:*'
            - 'cognito-identity:*'
            Resource: '*'
          - Effect: 'Allow'
            Action:
            - 'execute-api:Invoke'
            Resource: 
               Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiSecure}/*

  UnauthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
        Fn::Sub: ${AWS::StackName}-UnauthRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Federated: 'cognito-identity.amazonaws.com'
          Action:
          - 'sts:AssumeRoleWithWebIdentity'
          Condition:
            StringEquals:
              'cognito-identity.amazonaws.com:aud': 
                Ref: IdentityPool
            'ForAnyValue:StringLike':
              'cognito-identity.amazonaws.com:amr': unauthenticated

      Policies:
      - PolicyName: 
          Fn::Sub: ${AWS::StackName}-UnauthPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Action:
            - 'mobileanalytics:PutEvents'
            - 'cognito-sync:*'
            - 'cognito-identity:*'
            Resource: '*'
          - Effect: 'Allow'
            Action:
            - 'execute-api:Invoke'
            Resource:
               Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiUnsecure}/*
